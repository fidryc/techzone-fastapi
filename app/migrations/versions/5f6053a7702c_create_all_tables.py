"""Create all tables

Revision ID: 5f6053a7702c
Revises: 2390f77e7756
Create Date: 2025-08-01 12:52:21.938949

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '5f6053a7702c'
down_revision: Union[str, Sequence[str], None] = '2390f77e7756'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=64), nullable=True),
    sa.Column('class_name', sa.String(length=32), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('orders_delivery_detail',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('address', sa.String(length=128), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('orders_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=128), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('stores',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=56), nullable=False),
    sa.Column('opening_hours', sa.String(length=128), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('orders_pickup_detail',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('store_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['store_id'], ['stores.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_orders_pickup_detail_store_id'), 'orders_pickup_detail', ['store_id'], unique=False)
    op.create_table('products',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=256), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('specification', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('rating', sa.Float(), nullable=True),
    sa.Column('description', sa.String(length=1024), nullable=False),
    sa.Column('months_warranty', sa.Integer(), nullable=True),
    sa.Column('country_origin', sa.String(length=128), nullable=False),
    sa.Column('sale_percent', sa.Integer(), nullable=True),
    sa.Column('views', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_specification_gin', 'products', ['specification'], unique=False, postgresql_using='gin')
    op.create_index(op.f('ix_products_category_id'), 'products', ['category_id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('hashed_password', sa.String(), nullable=True),
    sa.Column('city', sa.String(), nullable=True),
    sa.Column('home_address', sa.String(), nullable=True),
    sa.Column('pickup_store_id', sa.Integer(), nullable=True),
    sa.Column('number', sa.String(), nullable=True),
    sa.Column('role', sa.Enum('user', 'seller', 'admin', name='user_role_enum'), nullable=False),
    sa.ForeignKeyConstraint(['pickup_store_id'], ['stores.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('number')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('baskets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_baskets_product_id'), 'baskets', ['product_id'], unique=False)
    op.create_index(op.f('ix_baskets_user_id'), 'baskets', ['user_id'], unique=False)
    op.create_table('favorite_products',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_favorite_products_product_id'), 'favorite_products', ['product_id'], unique=False)
    op.create_index(op.f('ix_favorite_products_user_id'), 'favorite_products', ['user_id'], unique=False)
    op.create_table('orders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('new', 'confirmed', 'preparing', 'delivered', 'ready', 'finished', 'cancelled', name='order_status_enum'), nullable=False),
    sa.Column('order_type_id', sa.Integer(), nullable=True),
    sa.Column('order_detail_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['order_type_id'], ['orders_type.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reviews',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('months_used', sa.Integer(), nullable=True),
    sa.Column('positive', sa.String(length=512), nullable=True),
    sa.Column('negative', sa.String(length=512), nullable=True),
    sa.Column('comment', sa.String(length=1024), nullable=False),
    sa.Column('date_posted', sa.DateTime(), nullable=True),
    sa.Column('date_updated', sa.DateTime(), nullable=True),
    sa.Column('is_edited', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_reviews_product_id'), 'reviews', ['product_id'], unique=False)
    op.create_index(op.f('ix_reviews_user_id'), 'reviews', ['user_id'], unique=False)
    op.create_table('stores_quantity_info',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('store_id', sa.Integer(), nullable=True),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['store_id'], ['stores.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_stores_quantity_info_product_id'), 'stores_quantity_info', ['product_id'], unique=False)
    op.create_index(op.f('ix_stores_quantity_info_store_id'), 'stores_quantity_info', ['store_id'], unique=False)
    op.create_table('purchases',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=True),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_purchases_order_id'), 'purchases', ['order_id'], unique=False)
    op.create_index(op.f('ix_purchases_product_id'), 'purchases', ['product_id'], unique=False)
    op.drop_table('user')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('hashed_password', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('city', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('home_address', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('pickup_store', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('number', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('user_pkey')),
    sa.UniqueConstraint('email', name=op.f('user_email_key'), postgresql_include=[], postgresql_nulls_not_distinct=False),
    sa.UniqueConstraint('number', name=op.f('user_number_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.drop_index(op.f('ix_purchases_product_id'), table_name='purchases')
    op.drop_index(op.f('ix_purchases_order_id'), table_name='purchases')
    op.drop_table('purchases')
    op.drop_index(op.f('ix_stores_quantity_info_store_id'), table_name='stores_quantity_info')
    op.drop_index(op.f('ix_stores_quantity_info_product_id'), table_name='stores_quantity_info')
    op.drop_table('stores_quantity_info')
    op.drop_index(op.f('ix_reviews_user_id'), table_name='reviews')
    op.drop_index(op.f('ix_reviews_product_id'), table_name='reviews')
    op.drop_table('reviews')
    op.drop_table('orders')
    op.drop_index(op.f('ix_favorite_products_user_id'), table_name='favorite_products')
    op.drop_index(op.f('ix_favorite_products_product_id'), table_name='favorite_products')
    op.drop_table('favorite_products')
    op.drop_index(op.f('ix_baskets_user_id'), table_name='baskets')
    op.drop_index(op.f('ix_baskets_product_id'), table_name='baskets')
    op.drop_table('baskets')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_products_category_id'), table_name='products')
    op.drop_index('idx_specification_gin', table_name='products', postgresql_using='gin')
    op.drop_table('products')
    op.drop_index(op.f('ix_orders_pickup_detail_store_id'), table_name='orders_pickup_detail')
    op.drop_table('orders_pickup_detail')
    op.drop_table('stores')
    op.drop_table('orders_type')
    op.drop_table('orders_delivery_detail')
    op.drop_table('categories')
    # ### end Alembic commands ###
